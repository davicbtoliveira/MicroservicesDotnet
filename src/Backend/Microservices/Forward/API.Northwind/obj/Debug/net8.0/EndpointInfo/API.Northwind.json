{
  "openapi": "3.0.1",
  "info": {
    "title": "API.Northwind - OnContainers Cotin",
    "description": "Application with Swagger and API versioning - Version 1.0.0.0 \r\n                                     </br></br>\r\n                                     <strong>Atenção</strong></br> \r\n                                     Para realizar o consumo dos endpoints é necessário possuir credenciais.\r\n                                     Por favor, entre em contato com o responsável, para obter as credenciais.",
    "contact": {
      "name": "Davi Oliveira",
      "email": "dcbtoliveira@hotmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "1.0"
  },
  "paths": {
    "/v1/Categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Método GET, destinado a busca de todos os registros da tabela Categories.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoriesDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoriesDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoriesDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "Método POST, destinado a criação de registros.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoriesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoriesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CategoriesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/Categories/{id}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Método GET, destinado a busca de registros.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Chave primária da tabela.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriesDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriesDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriesDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Categories"
        ],
        "summary": "Método PUT, destinado a alteração de registros no banco.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoriesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoriesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CategoriesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Categories"
        ],
        "summary": "Método DELETE, destinado a exclusão de registros do banco, utilizando o ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Chave primária da tabela.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/Categories/ListagemCategories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Método GET, destinado a busca de registros, Categories com paginação.",
        "parameters": [
          {
            "name": "pageNo",
            "in": "query",
            "description": "Número da página que será exibida (default = 1).",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Quantidade de registros que serão exibidos (default = 20).",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriesDtoIPagedList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriesDtoIPagedList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriesDtoIPagedList"
                }
              }
            }
          }
        }
      }
    },
    "/v1/Categories/CategoryName": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Método GET, destinado a busca de registros.",
        "parameters": [
          {
            "name": "categoryName",
            "in": "query",
            "description": "Chave primária da tabela.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriesDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriesDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriesDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/Employees/{id}": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Método GET, destinado a busca de registros.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Chave primária da tabela.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeesDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeesDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeesDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Employees"
        ],
        "summary": "Método DELETE, destinado a exclusão de registros do banco, utilizando o ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Chave primária da tabela.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/Employees/ListagemEmployees": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Método GET, destinado a busca de registros, Categories com paginação.",
        "parameters": [
          {
            "name": "pageNo",
            "in": "query",
            "description": "Número da página que será exibida (default = 1).",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Quantidade de registros que serão exibidos (default = 20).",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeesDtoIPagedList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeesDtoIPagedList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeesDtoIPagedList"
                }
              }
            }
          }
        }
      }
    },
    "/v1/Employees/Filtro": {
      "post": {
        "tags": [
          "Employees"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FiltroEmployeesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FiltroEmployeesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FiltroEmployeesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeesDtoPagedList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeesDtoPagedList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeesDtoPagedList"
                }
              }
            }
          }
        }
      }
    },
    "/v1/Employees": {
      "put": {
        "tags": [
          "Employees"
        ],
        "summary": "Método PUT, destinado a alteração de registros no banco.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Employees"
        ],
        "summary": "Método POST, destinado a criação de registros.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CategoriesDto": {
        "type": "object",
        "properties": {
          "categoryID": {
            "type": "integer",
            "format": "int32"
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "picture": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CategoriesDtoIPagedList": {
        "type": "object",
        "properties": {
          "indexFrom": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "pageIndex": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoriesDto"
            },
            "nullable": true,
            "readOnly": true
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ESituacao": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "EmployeesDto": {
        "type": "object",
        "properties": {
          "employeeID": {
            "type": "integer",
            "format": "int32"
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "titleOfCourtesy": {
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "hireDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "region": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "homePhone": {
            "type": "string",
            "nullable": true
          },
          "extension": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "reportsTo": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "photoPath": {
            "type": "string",
            "nullable": true
          },
          "photoFile": {
            "type": "string",
            "nullable": true
          },
          "situacao": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "descricao": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmployeesDtoIPagedList": {
        "type": "object",
        "properties": {
          "indexFrom": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "pageIndex": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployeesDto"
            },
            "nullable": true,
            "readOnly": true
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "EmployeesDtoPagedList": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "indexFrom": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployeesDto"
            },
            "nullable": true
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FiltroEmployeesDto": {
        "type": "object",
        "properties": {
          "pageNo": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orderByColumn": {
            "type": "string",
            "nullable": true
          },
          "isAsc": {
            "type": "boolean",
            "nullable": true
          },
          "employeeID": {
            "type": "integer",
            "format": "int32"
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "titleOfCourtesy": {
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "hireDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "region": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "homePhone": {
            "type": "string",
            "nullable": true
          },
          "extension": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "reportsTo": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "photoPath": {
            "type": "string",
            "nullable": true
          },
          "photoFile": {
            "type": "string",
            "nullable": true
          },
          "situacao": {
            "$ref": "#/components/schemas/ESituacao"
          },
          "descricao": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Insira o token JWT desta maneira: Bearer {seu token}",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}